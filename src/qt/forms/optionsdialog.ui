<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>OptionsDialog</class>
 <widget class="QDialog" name="OptionsDialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>540</width>
    <height>380</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Options</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QDialog, QFrame {
	color: #694e4f;
	background-color: #ffffff;
	border: none;
}

QLabel {
	background-color: transparent;
}

QCheckBox {
    color: #694e4f;
}

QFrame#central { background-color: #ffffff; border: none }
QFrame#frame, QFrame#frame_2, QFrame#frame_3 {
	background-color: #f7f4e4;
	border-style: plain;
	border-width: 20px;
	border-radius: 20px;
	border-color: #f7f4e4;
	min-width: 10em;
	padding: 6px;
}
QLabel[openExternalLinks=true], QHeaderView { color: #cb585b }
QLabel[openExternalLinks=false] { color: #694e4f; font-weight: normal }
QPushButton, QToolButton {
	border: 2px solid #f7f4e4;
	border-radius: 4px;
	background-color: #f7f4e4;
	color: #694e4f;
	padding: 6px;
	margin: 6px;
}
QPushButton:pressed, QToolButton:checked {
	color: #cb585b;
}
QPushButton:pressed, QToolButton:pressed {
	border-color: #cb585b;
	color: #cb585b;
}
QPushButton:disabled, QToolButton:disabled {
	color: #444;
	background-color: #ffffff;
}


#scrollAreaWidgetContents QToolButton {
	border-radius: 8px;
	border-width: 0px;
}

/* the background-color is overridden to transparent for mac os x 
   due to the entire toolbar area not being drawable in a regular
   QMainWindow
*/
QToolBar { background: #ffffff; border: 0px solid black; padding: 3px; }

QToolBar::handle { image: url(handle.png); }
QStatusBar { background: #ffffff; }
QMenuBar { background: #ffffff; }
QMenuBar::item { background: #ffffff; color: #694e4f; }

#scrollAreaWidgetContents { background: #222 }
#scrollAreaWidgetContents &gt; QFrame { background-color: #ffffff; border-width: 0px; border-style: none; }

QLineEdit {
	border-radius: 3px;
	border-width: 2px;
	border-color: #ffffff;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox {
	border-radius: 4px;
	border-width: 0;
	border-style: none;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox::drop-down {
	border-width: 0;
	border-style: none;
	background-color: #f7f4e4;
	color: #694e4f;
}

QTableView {
	background: #f7f4e4;
	color: #694e4f;
	border-style: none;
	selection-background-color: #cb585b;
    alternate-background-color: #ffffff;
	selection-color: #f7f4e4;
	border: 0px solid black;
}

QHeaderView { color: #cb585b; background-color: #f7f4e4; background-image: none; }
QHeaderView::section { color: #cb585b; background-color: #ffffff; }
QHeaderView::section:checked { background-color: #f7f4e4; }

QTabWidget {
	background: #f7f4e4;
}

 QTabWidget::pane {
     border-top: 2px solid #f7f4e4;
     border: 2px solid #111;
     border-bottom-left-radius: 8px;
     border-bottom-right-radius: 8px;
     border-top-right-radius: 8px;
	background: #f7f4e4;
 }

 QTabWidget::tab-bar {
     left: 5px; /* move to the right by 5px */
 }

 /* Style the tab using the tab sub-control. Note that
     it reads QTabBar _not_ QTabWidget */
 QTabBar::tab {
     background: #f7f4e4;
     border: 4px solid #ffffff;
     border-bottom-color: #f7f4e4; /* same as the pane color */
     border-top-left-radius: 2px;
     border-top-right-radius: 2px;
     min-width: 8ex;
     padding: 4px;
     color: #888;
 }

 QTabBar::tab:selected, QTabBar::tab:hover {
     color: #cca000
 }

 QTabBar::tab:selected {
     border-color: #f7f4e4; /* same as pane color */
     border-top-color: #cb585b;
 }

 QTabBar::tab:!selected {
     margin-top: 2px; /* make non-selected tabs look smaller */
 }

 /* make use of negative margins for overlapping tabs */
 QTabBar::tab:selected {
     /* expand/overlap to the left and right by 4px */
     margin-left: -4px;
     margin-right: -4px;
 }

 QTabBar::tab:first:selected {
     margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
 }

 QTabBar::tab:last:selected {
     margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
 }

 QTabBar::tab:only-one {
     margin: 0; /* if there is only one tab, we don't want overlapping margins */
 }


</string>
  </property>
  <property name="modal">
   <bool>true</bool>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <item>
    <widget class="QTabWidget" name="tabWidget">
     <property name="autoFillBackground">
      <bool>false</bool>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: #ffffff;

QLabel {
	background-color: transparent;
}

QCheckBox {
    color: #694e4f;
}

QFrame#central { background-color: #ffffff; border: none }
QFrame#frame, QFrame#frame_2, QFrame#frame_3 {
	background-color: #f7f4e4;
	border-style: plain;
	border-width: 20px;
	border-radius: 20px;
	border-color: #f7f4e4;
	min-width: 10em;
	padding: 6px;
}
QLabel[openExternalLinks=true], QHeaderView { color: #cb585b }
QLabel[openExternalLinks=false] { color: #694e4f; font-weight: normal }
QPushButton, QToolButton {
	border: 2px solid #f7f4e4;
	border-radius: 12px;
	background-color: #f7f4e4;
	color: #694e4f;
	padding: 8px;
	margin: 8px;
}
QPushButton:pressed, QToolButton:checked {
	color: #cb585b;
}
QPushButton:pressed, QToolButton:pressed {
	border-color: #cb585b;
	color: #cb585b;
}
QPushButton:disabled, QToolButton:disabled {
	color: #444;
	background-color: #ffffff;
}


#scrollAreaWidgetContents QToolButton {
	border-radius: 4px;
	border-width: 0px;
}

/* the background-color is overridden to transparent for mac os x 
   due to the entire toolbar area not being drawable in a regular
   QMainWindow
*/
QToolBar { background: #ffffff; border: 0px solid black; padding: 3px; }

QToolBar::handle { image: url(handle.png); }
QStatusBar { background: #ffffff; }
QMenuBar { background: #ffffff; }
QMenuBar::item { background: #ffffff; color: #694e4f; }

#scrollAreaWidgetContents { background: #ffffff }
#scrollAreaWidgetContents &gt; QFrame { background-color: #ffffff; border-width: 0px; border-style: none; }

QLineEdit {
	border-radius: 6px;
	border-width: 2px;
	border-color: #ffffff;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox {
	border-radius: 6px;
	border-width: 0;
	border-style: none;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox::drop-down {
	border-width: 0;
	border-style: none;
	background-color: #f7f4e4;
	color: #694e4f;
}

QTableView {
	background: #f7f4e4;
	color: #694e4f;
	border-style: none;
	selection-background-color: #cca000;
    alternate-background-color: #ffffff;
	selection-color: #111;
	border: 0px solid black;
}

QHeaderView { color: #cca000; background-color: #f7f4e4; background-image: none; }
QHeaderView::section { color: #cca000; background-color: #ffffff; }
QHeaderView::section:checked { background-color: #f7f4e4; }

QTabWidget {
	background: #f7f4e4;
}

 QTabWidget::pane {
     border-top: 2px solid #f7f4e4;
     border: 4px solid #f7f4e4;
     border-bottom-left-radius: 4px;
     border-bottom-right-radius: 4px;
     border-top-right-radius: 4px;
	background: #f7f4e4;
 }

 QTabWidget::tab-bar {
     left: 5px; /* move to the right by 5px */
 }

 /* Style the tab using the tab sub-control. Note that
     it reads QTabBar _not_ QTabWidget */
 QTabBar::tab {
     background: #f7f4e4;
     border: 2px solid #ffffff;
     border-bottom-color: #f7f4e4; /* same as the pane color */
     border-top-left-radius: 4px;
     border-top-right-radius: 4px;
     min-width: 8ex;
     padding: 4px;
     color: #694e4f;
 }

 QTabBar::tab:selected, QTabBar::tab:hover {
     color: #cca000
 }

 QTabBar::tab:selected {
     border-color: #f7f4e4; /* same as pane color */
     border-top-color: #cca000;
 }

 QTabBar::tab:!selected {
     margin-top: 2px; /* make non-selected tabs look smaller */
 }

 /* make use of negative margins for overlapping tabs */
 QTabBar::tab:selected {
     /* expand/overlap to the left and right by 4px */
     margin-left: -4px;
     margin-right: -4px;
 }

 QTabBar::tab:first:selected {
     margin-left: 0; /* the first selected tab has nothing to overlap with on the left */
 }

 QTabBar::tab:last:selected {
     margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
 }

 QTabBar::tab:only-one {
     margin: 0; /* if there is only one tab, we don't want overlapping margins */
 }</string>
     </property>
     <property name="tabPosition">
      <enum>QTabWidget::North</enum>
     </property>
     <property name="currentIndex">
      <number>3</number>
     </property>
     <widget class="QWidget" name="tabMain">
      <property name="styleSheet">
       <string notr="true">QToolTip {
	color: white;
	background-color: #222;
}
</string>
      </property>
      <attribute name="title">
       <string>&amp;Main</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_Main">
       <item>
        <widget class="QLabel" name="transactionFeeInfoLabel">
         <property name="text">
          <string>Optional transaction fee per kB that helps make sure your transactions are processed quickly. Most transactions are 1 kB. Fee 0.01 recommended.</string>
         </property>
         <property name="textFormat">
          <enum>Qt::PlainText</enum>
         </property>
         <property name="wordWrap">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayoutFee">
         <item>
          <widget class="QLabel" name="transactionFeeLabel">
           <property name="text">
            <string>Pay transaction &amp;fee</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>transactionFee</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="BitcoinAmountField" name="transactionFee">
           <property name="styleSheet">
            <string notr="true">	border-radius: 6px;
	border-width: 0;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacerFee">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QLabel" name="reserveBalanceInfoLabel">
         <property name="text">
          <string>Reserved amount does not participate in staking and is therefore spendable at any time.</string>
         </property>
         <property name="textFormat">
          <enum>Qt::PlainText</enum>
         </property>
         <property name="wordWrap">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayoutReserveBalance">
         <item>
          <widget class="QLabel" name="reserveBalanceLabel">
           <property name="text">
            <string>Reserve</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>reserveBalance</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="BitcoinAmountField" name="reserveBalance">
           <property name="styleSheet">
            <string notr="true">	border-radius: 6px;
	border-width: 0;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacerReserveBalance">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QCheckBox" name="bitcoinAtStartup">
         <property name="toolTip">
          <string>Automatically start Pesa after logging in to the system.</string>
         </property>
         <property name="text">
          <string>&amp;Start Pesa on system login</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="detachDatabases">
         <property name="toolTip">
          <string>Detach block and address databases at shutdown. This means they can be moved to another data directory, but it slows down shutdown. The wallet is always detached.</string>
         </property>
         <property name="text">
          <string>&amp;Detach databases at shutdown</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_Main">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tabNetwork">
      <attribute name="title">
       <string>&amp;Network</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_Network">
       <item>
        <widget class="QCheckBox" name="mapPortUpnp">
         <property name="toolTip">
          <string>Automatically open the Pesa client port on the router. This only works when your router supports UPnP and it is enabled.</string>
         </property>
         <property name="text">
          <string>Map port using &amp;UPnP</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="connectSocks">
         <property name="toolTip">
          <string>Connect to the Pesa network through a SOCKS proxy (e.g. when connecting through Tor).</string>
         </property>
         <property name="text">
          <string>&amp;Connect through SOCKS proxy:</string>
         </property>
        </widget>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_Network">
         <item>
          <widget class="QLabel" name="proxyIpLabel">
           <property name="text">
            <string>Proxy &amp;IP:</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>proxyIp</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QValidatedLineEdit" name="proxyIp">
           <property name="maximumSize">
            <size>
             <width>140</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="toolTip">
            <string>IP address of the proxy (e.g. 127.0.0.1)</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QLineEdit {
	background-color: #f7f4e4;
	color: #694e4f;
}</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="proxyPortLabel">
           <property name="text">
            <string>&amp;Port:</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>proxyPort</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLineEdit" name="proxyPort">
           <property name="maximumSize">
            <size>
             <width>55</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="toolTip">
            <string>Port of the proxy (e.g. 9050)</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QLineEdit {
	background-color: #f7f4e4;
	color: #694e4f;
	width: 32px;
}</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="socksVersionLabel">
           <property name="text">
            <string>SOCKS &amp;Version:</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>socksVersion</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QValueComboBox" name="socksVersion">
           <property name="toolTip">
            <string>SOCKS version of the proxy (e.g. 5)</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QLineEdit {
	border-radius: 6px;
	border-width: 2px;
	border-color: #222;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox {
	border-radius: 6px;
	border-width: 0;
	border-style: none;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox::drop-down {
	border-width: 0;
	border-style: none;
	background-color: #f7f4e4;
	color: #694e4f;
}</string>
           </property>
          </widget>
         </item>
         <item>
          <spacer name="horizontalSpacer_Network">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>40</width>
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </item>
       <item>
        <spacer name="verticalSpacer_Network">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tabWindow">
      <attribute name="title">
       <string>&amp;Window</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_Window">
       <item>
        <widget class="QCheckBox" name="minimizeToTray">
         <property name="toolTip">
          <string>Show only a tray icon after minimizing the window.</string>
         </property>
         <property name="text">
          <string>&amp;Minimize to the tray instead of the taskbar</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="minimizeOnClose">
         <property name="toolTip">
          <string>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Quit in the menu.</string>
         </property>
         <property name="text">
          <string>M&amp;inimize on close</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_Window">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tabDisplay">
      <attribute name="title">
       <string>&amp;Display</string>
      </attribute>
      <layout class="QVBoxLayout" name="verticalLayout_Display">
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_1_Display">
         <item>
          <widget class="QLabel" name="langLabel">
           <property name="text">
            <string>User Interface &amp;language:</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>lang</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QValueComboBox" name="lang">
           <property name="toolTip">
            <string>The user interface language can be set here. This setting will take effect after restarting Pesa.</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QLineEdit {
	border-radius: 6px;
	border-width: 2px;
	border-color: #ffffff;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox {
	border-radius: 6px;
	border-width: 0;
	border-style: none;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox::drop-down {
	border-width: 0;
	border-style: none;
	background-color: #f7f4e4;
	color: #694e4f;
}</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <layout class="QHBoxLayout" name="horizontalLayout_2_Display">
         <item>
          <widget class="QLabel" name="unitLabel">
           <property name="text">
            <string>&amp;Unit to show amounts in:</string>
           </property>
           <property name="textFormat">
            <enum>Qt::PlainText</enum>
           </property>
           <property name="buddy">
            <cstring>unit</cstring>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QValueComboBox" name="unit">
           <property name="toolTip">
            <string>Choose the default subdivision unit to show in the interface and when sending coins.</string>
           </property>
           <property name="styleSheet">
            <string notr="true">QLineEdit {
	border-radius: 6px;
	border-width: 2px;
	border-color: #ffffff;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox {
	border-radius: 6px;
	border-width: 0;
	border-style: none;
	padding: 8px;
	background-color: #f7f4e4;
	color: #694e4f;
}

QComboBox::drop-down {
	border-width: 0;
	border-style: none;
	background-color: #f7f4e4;
	color: #694e4f;
}</string>
           </property>
          </widget>
         </item>
        </layout>
       </item>
       <item>
        <widget class="QCheckBox" name="displayAddresses">
         <property name="toolTip">
          <string>Whether to show Pesa addresses in the transaction list or not.</string>
         </property>
         <property name="text">
          <string>&amp;Display addresses in transaction list</string>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QCheckBox" name="coinControlFeatures">
         <property name="toolTip">
          <string>Whether to show coin control features or not.</string>
         </property>
         <property name="text">
          <string>Display coin &amp;control features (experts only!)</string>
         </property>
        </widget>
       </item>
       <item>
        <spacer name="verticalSpacer_Display">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout_Buttons">
     <item>
      <spacer name="horizontalSpacer_1">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>40</width>
         <height>48</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QLabel" name="statusLabel">
       <property name="font">
        <font>
         <weight>50</weight>
         <bold>false</bold>
        </font>
       </property>
       <property name="text">
        <string/>
       </property>
       <property name="textFormat">
        <enum>Qt::PlainText</enum>
       </property>
       <property name="wordWrap">
        <bool>true</bool>
       </property>
      </widget>
     </item>
     <item>
      <spacer name="horizontalSpacer_2">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>40</width>
         <height>48</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QPushButton" name="okButton">
       <property name="text">
        <string>&amp;OK</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="cancelButton">
       <property name="text">
        <string>&amp;Cancel</string>
       </property>
       <property name="autoDefault">
        <bool>false</bool>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QPushButton" name="applyButton">
       <property name="text">
        <string>&amp;Apply</string>
       </property>
       <property name="autoDefault">
        <bool>false</bool>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>BitcoinAmountField</class>
   <extends>QSpinBox</extends>
   <header>bitcoinamountfield.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>QValidatedLineEdit</class>
   <extends>QLineEdit</extends>
   <header>qvalidatedlineedit.h</header>
  </customwidget>
  <customwidget>
   <class>QValueComboBox</class>
   <extends>QComboBox</extends>
   <header>qvaluecombobox.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
